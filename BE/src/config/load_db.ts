import mongoose from 'mongoose';
import dotenv from 'dotenv';
import path from 'path';

dotenv.config({ path: path.resolve(__dirname, '../../.env') });

// 1. Định nghĩa schema cho từng model
const userSchema = new mongoose.Schema({
  userId: Number,
  fullName: String,
  email: String,
  password: String,
  avatarUrl: String,
  createdAt: Date,
});

const projectSchema = new mongoose.Schema({
  id: Number,
  name: String,
  description: String,
  ownerId: Number,
  createdAt: Date,
});

const statusSchema = new mongoose.Schema({
  statusId: Number,
  name: String,
  displayOrder: Number,
  projectId: Number,
});

const labelSchema = new mongoose.Schema({
  labelId: Number,
  name: String,
  color: String,
});

const taskSchema = new mongoose.Schema({
  taskId: Number,
  title: String,
  description: String,
  startDate: Date,
  dueDate: Date,
  createdAt: Date,
  updatedAt: Date,
  creatorId: Number,
  assigneeId: Number,
  statusId: Number,
  projectId: Number,
  labelId: [Number],
});

const commentSchema = new mongoose.Schema({
  commentId: Number,
  content: String,
  createdAt: Date,
  userId: Number,
  taskId: Number,
});

const checklistItemSchema = new mongoose.Schema({
  itemId: Number,
  title: String,
  isCompleted: Boolean,
  taskId: Number,
});

// 2. Tạo model
const User = mongoose.model('User', userSchema);
const Project = mongoose.model('Project', projectSchema);
const Status = mongoose.model('Status', statusSchema);
const Label = mongoose.model('Label', labelSchema);
const Task = mongoose.model('Task', taskSchema);
const Comment = mongoose.model('Comment', commentSchema);
const ChecklistItem = mongoose.model('ChecklistItem', checklistItemSchema);

// 3. Dữ liệu mẫu
const users = [
  { userId: 1, fullName: 'Admin User', email: 'admin@example.com', password: '123456', avatarUrl: '', createdAt: new Date() },
  { userId: 2, fullName: 'John Doe', email: 'john@example.com', password: '123456', avatarUrl: '', createdAt: new Date() },
  { userId: 3, fullName: 'Jane Smith', email: 'jane@example.com', password: '123456', avatarUrl: '', createdAt: new Date() },
  { userId: 4, fullName: 'Alice Nguyen', email: 'alice@example.com', password: '123456', avatarUrl: '', createdAt: new Date() },
  { userId: 5, fullName: 'Bob Tran', email: 'bob@example.com', password: '123456', avatarUrl: '', createdAt: new Date() },
];

const projects = [
  { id: 1, name: 'Default Project', description: 'Default project for testing', ownerId: 1, createdAt: new Date() },
  { id: 2, name: 'Website Redesign', description: 'Redesign the company website', ownerId: 2, createdAt: new Date() },
  { id: 3, name: 'Mobile App', description: 'Develop a new mobile app', ownerId: 3, createdAt: new Date() },
  { id: 4, name: 'Marketing Campaign', description: 'Q3 Marketing Campaign', ownerId: 4, createdAt: new Date() },
  { id: 5, name: 'HR System Update', description: 'Update internal HR system', ownerId: 5, createdAt: new Date() },
  { id: 6, name: 'Customer Feedback Analysis', description: 'Analyze Q2 customer feedback', ownerId: 1, createdAt: new Date() },
  { id: 7, name: 'API Integration', description: 'Integrate with third-party API', ownerId: 2, createdAt: new Date() },
  { id: 8, name: 'Documentation Overhaul', description: 'Rewrite the technical documentation', ownerId: 3, createdAt: new Date() },
  { id: 9, name: 'Performance Optimization', description: 'Improve application performance', ownerId: 4, createdAt: new Date() },
  { id: 10, name: 'Security Audit', description: 'Conduct a full security audit', ownerId: 5, createdAt: new Date() },
  { id: 11, name: 'Onboarding Process', description: 'Streamline new employee onboarding', ownerId: 1, createdAt: new Date() },
  { id: 12, name: 'Blog Content Creation', description: 'Create content for the company blog', ownerId: 2, createdAt: new Date() },
  { id: 13, name: 'Social Media Strategy', description: 'Develop a new social media strategy', ownerId: 3, createdAt: new Date() },
  { id: 14, name: 'Data Migration', description: 'Migrate database to a new server', ownerId: 4, createdAt: new Date() },
  { id: 15, name: 'Feature A/B Testing', description: 'Run A/B tests for a new feature', ownerId: 5, createdAt: new Date() },
];

const statuses = [
  { statusId: 1, name: 'Pending'},
  { statusId: 2, name: 'In Progress'},
  { statusId: 3, name: 'Ready For Test' },
  { statusId: 4, name: 'Completed'},
  { statusId: 5, name: 'Code Review'},
  { statusId: 6, name: 'Backlog'},
  { statusId: 7, name: 'Delivery' },
  { statusId: 8, name: 'Mới'},
];

const labels = [
  { labelId: 1, name: 'FE', color: '#19c7b2' },
  { labelId: 2, name: 'BE', color: '#f7a8b8' },
  { labelId: 3, name: 'Test', color: '#c084fc' },
  { labelId: 4, name: 'Document', color: '#facc15' },
  { labelId: 5, name: 'Review', color: '#e11d48' },
  { labelId: 6, name: 'Bug', color: '#ef4444' },
  { labelId: 7, name: 'Critical', color: '#ef4444' },
  { labelId: 8, name: 'Major', color: '#f97316' },
  { labelId: 9, name: 'Medium', color: '#a78bfa' },
  { labelId: 10, name: 'Low', color: '#22d32e' },
];

const tasks = [
  {
    taskId: 1,
    title: 'Sample Task',
    description: 'This is a sample task',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 2,
    statusId: 1,
    projectId: 1,
    labelId: [1, 6],
  },
  {
    taskId: 2,
    title: 'Fix login bug',
    description: 'Users cannot log in with Google',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 3,
    statusId: 2,
    projectId: 1,
    labelId: [2, 6, 7],
  },
  {
    taskId: 3,
    title: 'Design new logo',
    description: 'Create a modern logo for the app',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 4,
    statusId: 1,
    projectId: 2,
    labelId: [1, 3],
  },
  {
    taskId: 4,
    title: 'Implement push notifications',
    description: 'Add push notification support',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 5,
    statusId: 4,
    projectId: 2,
    labelId: [2, 4],
  },
  {
    taskId: 5,
    title: 'Write unit tests',
    description: 'Increase test coverage to 80%',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 1,
    statusId: 7,
    projectId: 3,
    labelId: [3, 5],
  },
  {
    taskId: 6,
    title: 'Finalize Q3 marketing budget',
    description: 'Description for task 6: Finalize Q3 marketing budget',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 15),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 2,
    statusId: 35,
    projectId: 12,
  },
  {
    taskId: 7,
    title: 'Draft blog post on new features',
    description: 'Description for task 7: Draft blog post on new features',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 20),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 1,
    statusId: 4,
    projectId: 2,
  },
  {
    taskId: 8,
    title: 'Test payment gateway',
    description: 'Description for task 8: Test payment gateway',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 5),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 29,
    projectId: 10,
  },
  {
    taskId: 9,
    title: 'Update user profile page UI',
    description: 'Description for task 9: Update user profile page UI',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 2),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 20,
    projectId: 7,
  },
  {
    taskId: 10,
    title: 'Fix CSS bugs on mobile',
    description: 'Description for task 10: Fix CSS bugs on mobile',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 1),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 1,
    projectId: 1,
  },
  {
    taskId: 11,
    title: 'Research competitor APIs',
    description: 'Description for task 11: Research competitor APIs',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 25),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 1,
    statusId: 31,
    projectId: 11,
  },
  {
    taskId: 12,
    title: 'Write API documentation for /users',
    description: 'Description for task 12: Write API documentation for /users',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 12),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 2,
    statusId: 23,
    projectId: 8,
  },
  {
    taskId: 13,
    title: 'Optimize database queries for dashboard',
    description: 'Description for task 13: Optimize database queries for dashboard',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 18),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 26,
    projectId: 9,
  },
  {
    taskId: 14,
    title: 'Review pull request #123',
    description: 'Description for task 14: Review pull request #123',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 3),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 5,
    projectId: 2,
  },
  {
    taskId: 15,
    title: 'Set up staging environment',
    description: 'Description for task 15: Set up staging environment',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 7),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 41,
    projectId: 14,
  },
  {
    taskId: 16,
    title: 'Conduct user acceptance testing',
    description: 'Description for task 16: Conduct user acceptance testing',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 22),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 1,
    statusId: 18,
    projectId: 6,
  },
  {
    taskId: 17,
    title: 'Create weekly performance report',
    description: 'Description for task 17: Create weekly performance report',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 6),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 2,
    statusId: 38,
    projectId: 13,
  },
  {
    taskId: 18,
    title: 'Design social media assets',
    description: 'Description for task 18: Design social media assets',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 10),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 11,
    projectId: 4,
  },
  {
    taskId: 19,
    title: 'Plan team offsite event',
    description: 'Description for task 19: Plan team offsite event',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 30),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 13,
    projectId: 5,
  },
  {
    taskId: 20,
    title: 'Migrate legacy data to new schema',
    description: 'Description for task 20: Migrate legacy data to new schema',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 14),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 41,
    projectId: 14,
  },
  {
    taskId: 21,
    title: 'A/B test new homepage headline',
    description: 'Description for task 21: A/B test new homepage headline',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 9),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 1,
    statusId: 44,
    projectId: 15,
  },
  {
    taskId: 22,
    title: 'Fix critical security vulnerability',
    description: 'Description for task 22: Fix critical security vulnerability',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 1),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 2,
    statusId: 29,
    projectId: 10,
  },
  {
    taskId: 23,
    title: 'Improve CI/CD pipeline speed',
    description: 'Description for task 23: Improve CI/CD pipeline speed',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 16),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 26,
    projectId: 9,
  },
  {
    taskId: 24,
    title: 'Onboard new marketing intern',
    description: 'Description for task 24: Onboard new marketing intern',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 4),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 10,
    projectId: 4,
  },
  {
    taskId: 25,
    title: 'Analyze user engagement metrics',
    description: 'Description for task 25: Analyze user engagement metrics',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 11),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 17,
    projectId: 6,
  },
  {
    taskId: 26,
    title: 'Develop password reset flow',
    description: 'Description for task 26: Develop password reset flow',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 8),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 1,
    statusId: 2,
    projectId: 1,
  },
  {
    taskId: 27,
    title: 'Refactor authentication module',
    description: 'Description for task 27: Refactor authentication module',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 13),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 2,
    statusId: 20,
    projectId: 7,
  },
  {
    taskId: 28,
    title: 'Create email templates for campaign',
    description: 'Description for task 28: Create email templates for campaign',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 19),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 11,
    projectId: 4,
  },
  {
    taskId: 29,
    title: 'Set up analytics tracking',
    description: 'Description for task 29: Set up analytics tracking',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 2),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 4,
    projectId: 2,
  },
  {
    taskId: 30,
    title: 'Perform load testing on API',
    description: 'Description for task 30: Perform load testing on API',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 21),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 26,
    projectId: 9,
  },
  {
    taskId: 31,
    title: 'Write end-to-end tests for checkout',
    description: 'Description for task 31: Write end-to-end tests for checkout',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 17),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 1,
    statusId: 8,
    projectId: 3,
  },
  {
    taskId: 32,
    title: 'Update privacy policy',
    description: 'Description for task 32: Update privacy policy',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 28),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 2,
    statusId: 32,
    projectId: 11,
  },
  {
    taskId: 33,
    title: 'Prepare presentation for stakeholders',
    description: 'Description for task 33: Prepare presentation for stakeholders',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 3),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 14,
    projectId: 5,
  },
  {
    taskId: 34,
    title: 'Investigate server performance issues',
    description: 'Description for task 34: Investigate server performance issues',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 1),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 26,
    projectId: 9,
  },
  {
    taskId: 35,
    title: 'Localize app content for German market',
    description: 'Description for task 35: Localize app content for German market',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 24),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 8,
    projectId: 3,
  },
  {
    taskId: 36,
    title: 'Design iconography for settings page',
    description: 'Description for task 36: Design iconography for settings page',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 10),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 1,
    statusId: 22,
    projectId: 8,
  },
  {
    taskId: 37,
    title: 'Brainstorm names for new product',
    description: 'Description for task 37: Brainstorm names for new product',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 6),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 2,
    statusId: 16,
    projectId: 6,
  },
  {
    taskId: 38,
    title: 'Create a disaster recovery plan',
    description: 'Description for task 38: Create a disaster recovery plan',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 29),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 28,
    projectId: 10,
  },
  {
    taskId: 39,
    title: 'Update frontend dependencies',
    description: 'Description for task 39: Update frontend dependencies',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 2),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 5,
    projectId: 2,
  },
  {
    taskId: 40,
    title: 'Configure DNS for new domain',
    description: 'Description for task 40: Configure DNS for new domain',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 5),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 40,
    projectId: 14,
  },
  {
    taskId: 41,
    title: 'Automate deployment process',
    description: 'Description for task 41: Automate deployment process',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 23),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 1,
    statusId: 26,
    projectId: 9,
  },
  {
    taskId: 42,
    title: 'Interview backend developer candidate',
    description: 'Description for task 42: Interview backend developer candidate',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 7),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 2,
    statusId: 14,
    projectId: 5,
  },
  {
    taskId: 43,
    title: 'Document sprint planning process',
    description: 'Description for task 43: Document sprint planning process',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 15),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 32,
    projectId: 11,
  },
  {
    taskId: 44,
    title: 'Create user flow diagrams',
    description: 'Description for task 44: Create user flow diagrams',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 12),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 22,
    projectId: 8,
  },
  {
    taskId: 45,
    title: 'Test on older Android versions',
    description: 'Description for task 45: Test on older Android versions',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 9),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 8,
    projectId: 3,
  },
  {
    taskId: 46,
    title: 'Handle edge cases in file upload',
    description: 'Description for task 46: Handle edge cases in file upload',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 18),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 3,
    assigneeId: 1,
    statusId: 20,
    projectId: 7,
  },
  {
    taskId: 47,
    title: 'Set up error monitoring with Sentry',
    description: 'Description for task 47: Set up error monitoring with Sentry',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 4),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 4,
    assigneeId: 2,
    statusId: 26,
    projectId: 9,
  },
  {
    taskId: 48,
    title: 'Create a content calendar',
    description: 'Description for task 48: Create a content calendar',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 26),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 5,
    assigneeId: 3,
    statusId: 34,
    projectId: 12,
  },
  {
    taskId: 49,
    title: 'Analyze sales funnel data',
    description: 'Description for task 49: Analyze sales funnel data',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 13),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 1,
    assigneeId: 4,
    statusId: 17,
    projectId: 6,
  },
  {
    taskId: 50,
    title: 'Refine user personas',
    description: 'Description for task 50: Refine user personas',
    startDate: new Date(),
    dueDate: new Date(Date.now() + 86400000 * 21),
    createdAt: new Date(),
    updatedAt: new Date(),
    creatorId: 2,
    assigneeId: 5,
    statusId: 10,
    projectId: 4,
  },
];

const comments = [
  { commentId: 1, content: 'This is a sample comment', createdAt: new Date(), userId: 2, taskId: 1 },
  { commentId: 2, content: 'I am working on this bug.', createdAt: new Date(), userId: 3, taskId: 2 },
  { commentId: 3, content: 'Logo draft is ready for review.', createdAt: new Date(), userId: 4, taskId: 3 },
  { commentId: 4, content: 'Push notification feature started.', createdAt: new Date(), userId: 5, taskId: 4 },
  { commentId: 5, content: 'Unit tests are important!', createdAt: new Date(), userId: 1, taskId: 5 },
];

const checklistItems = [
  { itemId: 1, title: 'Sample checklist item', isCompleted: false, taskId: 1 },
  { itemId: 2, title: 'Check Google login', isCompleted: true, taskId: 2 },
  { itemId: 3, title: 'Upload logo to drive', isCompleted: false, taskId: 3 },
  { itemId: 4, title: 'Test push on Android', isCompleted: false, taskId: 4 },
  { itemId: 5, title: 'Write tests for API', isCompleted: true, taskId: 5 },
  { itemId: 6, title: 'Review code', isCompleted: false, taskId: 5 },
];

// 4. Hàm seed data
async function seed() {
  await mongoose.connect(process.env.DB_URL!);

  await User.deleteMany({});
  await Project.deleteMany({});
  await Status.deleteMany({});
  await Label.deleteMany({});
  await Task.deleteMany({});
  await Comment.deleteMany({});
  await ChecklistItem.deleteMany({});

  await User.insertMany(users);
  await Project.insertMany(projects);
  await Status.insertMany(statuses);
  await Label.insertMany(labels);
  await Task.insertMany(tasks);
  await Comment.insertMany(comments);
  await ChecklistItem.insertMany(checklistItems);

  console.log('✅ Seed data completed!');
  await mongoose.disconnect();
}

seed();
